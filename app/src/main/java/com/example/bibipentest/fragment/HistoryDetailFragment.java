package com.example.bibipentest.fragment;

import android.os.Bundle;

import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.example.bibipentest.MyApp;
import com.example.bibipentest.R;
import com.example.bibipentest.json.RequestCheckResult;
import com.example.bibipentest.json.RequestUndateUserInfo;
import com.example.bibipentest.json.ResponseCheckResult;
import com.example.bibipentest.json.ResponseObject;
import com.example.bibipentest.util.HttpUtil;
import com.google.gson.Gson;

import java.io.IOException;

import okhttp3.MediaType;
import okhttp3.RequestBody;


public class HistoryDetailFragment extends Fragment {

    private ImageView imageView;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        View rootView =  inflater.inflate(R.layout.fragment_history_detail, container, false);

        imageView = rootView.findViewById(R.id.image_view);

        new Thread(()->{
            request();
        }).start();
        return rootView;
    }



    private void loadRemoteImage(String imageUrl){
        Glide.with(this)
                .load(imageUrl)
                .into(imageView);
    }


    private Handler uiHandler = new Handler();

    private void request(){
        String url = "http://10.110.147.81:8088/penUser/getcheckresult";

        RequestCheckResult req = new RequestCheckResult(
                7,
                MyApp.getInstance().getPhone()
        );

        Gson gson = new Gson();

        RequestBody requestBody = RequestBody.create(
                MediaType.parse("application/json"),
                gson.toJson(req)
        );

        HttpUtil httpUtil = HttpUtil.getInstance();
        httpUtil.postRequest(url, requestBody, new HttpUtil.OkHttpCallback() {
            @Override
            public void onResponse(String response) {
                Gson gson = new Gson();
                ResponseCheckResult responseObject = gson.fromJson(response, ResponseCheckResult.class);
                String toastMessage = responseObject.getMsg();
                Log.e("HTTPTEST", toastMessage);
                new Handler(getActivity().getMainLooper()).post(() -> {
                    if(responseObject.getCode()!=200){
                        Toast.makeText(MyApp.getInstance(), toastMessage, Toast.LENGTH_SHORT).show();
                    } else {
                        String imageUrl = responseObject.getData().getImgurl();
                        if (!imageUrl.startsWith("http")){
                            imageUrl = "http://"+imageUrl;
                        }
                        loadRemoteImage(imageUrl);
                    }
                });

            }

            @Override
            public void onFailure(IOException e) {
                Log.e("HTTPTEST", "onFailure");
                Log.e("HTTPTEST", e.toString());
            }
        });
    }
}