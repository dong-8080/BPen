package com.example.bibipentest.fragment;

import android.annotation.SuppressLint;
import android.os.Bundle;

import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.example.bibipentest.MyApp;
import com.example.bibipentest.R;
import com.example.bibipentest.adapter.AnswerHistoryAdapter;
import com.example.bibipentest.json.RequestCheckResultList;
import com.example.bibipentest.json.RequestUndateUserInfo;
import com.example.bibipentest.json.ResponseCheckResult;
import com.example.bibipentest.json.ResponseCheckResultList;
import com.example.bibipentest.json.ResponseObject;
import com.example.bibipentest.util.HttpUtil;
import com.google.gson.Gson;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import okhttp3.MediaType;
import okhttp3.RequestBody;

public class HistoryListFragment extends Fragment {

    private RecyclerView recyclerView;
    private List<ResponseCheckResultList.CheckResult> dataList;

    @SuppressLint("MissingInflatedId")
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_history_list, container, false);

        recyclerView = view.findViewById(R.id.recycle_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));

        dataList=null;

        request();
        return view;
    }

    private Handler uiHandler = new Handler();

    private void request(){
        String url = "http://10.110.147.81:8088/penUser/listpaperdone";


        int gender_num = 0;

        RequestCheckResultList req = new RequestCheckResultList(
                MyApp.getInstance().getPhone()
        );

        Gson gson = new Gson();

        RequestBody requestBody = RequestBody.create(
                MediaType.parse("application/json"),
                gson.toJson(req)
        );

        HttpUtil httpUtil = HttpUtil.getInstance();
        httpUtil.postRequest(url, requestBody, new HttpUtil.OkHttpCallback() {
            @Override
            public void onResponse(String response) {
                Gson gson = new Gson();
                ResponseCheckResultList responseObject = gson.fromJson(response, ResponseCheckResultList.class);
                String toastMessage = responseObject.getMsg();

                uiHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(MyApp.getInstance(), toastMessage, Toast.LENGTH_SHORT).show();
                        if (responseObject.getCode().toString().equals("200")){
                            dataList = responseObject.getData();
                            AnswerHistoryAdapter adapter = new AnswerHistoryAdapter(dataList);
//                            adapter.notifyDataSetChanged();

                            recyclerView.setAdapter(adapter);
                        }

                    }
                });
            }

            @Override
            public void onFailure(IOException e) {
                Log.e("HTTPTEST", "onFailure");
                Log.e("HTTPTEST", e.toString());
            }
        });
    }
}