package com.example.bibipentest.fragment;

import android.app.DatePickerDialog;
import android.content.DialogInterface;
import android.icu.util.Calendar;
import android.os.Bundle;

import androidx.appcompat.app.AlertDialog;
import androidx.fragment.app.Fragment;
import androidx.navigation.Navigation;

import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

import com.example.bibipentest.MyApp;
import com.example.bibipentest.R;
import com.example.bibipentest.json.RequestBingingPen;
import com.example.bibipentest.json.RequestUndateUserInfo;
import com.example.bibipentest.json.ResponseObject;
import com.example.bibipentest.json.ResponseUserInfo;
import com.example.bibipentest.util.HttpUtil;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.google.gson.Gson;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import kotlinx.coroutines.internal.AtomicOp;
import okhttp3.MediaType;
import okhttp3.RequestBody;

public class PersonalInformationFragment extends Fragment implements View.OnClickListener {
    private static final String TAG = "PersonalInformationFragment";
    private TextInputEditText et_username;
    private TextInputEditText et_phone_number;
    private TextInputEditText et_birthday;
    private TextInputEditText et_gender;
    private Button btn_confirm;
    private Button btn_backup;

    private ResponseUserInfo.UserInfo userInfo;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_personal_information, container, false);

        et_username = rootView.findViewById(R.id.et_username);
        et_phone_number = rootView.findViewById(R.id.et_phone_number);
        et_birthday = rootView.findViewById(R.id.et_birthday);
        et_gender = rootView.findViewById(R.id.et_gender);
        btn_confirm = rootView.findViewById(R.id.btn_confirm);
        btn_backup = rootView.findViewById(R.id.btn_backup);

        btn_confirm.setOnClickListener(this);
        et_birthday.setOnClickListener(this);
        et_gender.setOnClickListener(this);
        btn_backup.setOnClickListener(this);

        getPersonalInformation();

        return rootView;
    }

    @Override
    public void onClick(View view) {

        if (view.getId() == R.id.btn_confirm) {
            // 保存并离开
            saveChanges();
        } else if (view.getId() == R.id.et_birthday) {
            showDatePickerDialog();
        } else if (view.getId() == R.id.et_gender) {
            showGenderPickerDialog();
        } else if(view.getId()==R.id.btn_backup){
            Navigation.findNavController(view).navigate(R.id.action_to_fragment_personal_center);
        }
    }

    // 请求保存信息
    private void saveChanges(){
        String url = "http://10.110.147.81:8088/penUser/updatePenUserinfo";

        int gender_num = 0;
        if (et_gender.getText().toString().equals("男")){
            gender_num = 1;
        }
        RequestUndateUserInfo req = new RequestUndateUserInfo(
            userInfo.getId(),
            et_username.getText().toString(),
            et_phone_number.getText().toString(),
            gender_num,
            et_birthday.getText().toString()
        );

        Gson gson = new Gson();

        RequestBody requestBody = RequestBody.create(
                MediaType.parse("application/json"),
                gson.toJson(req)
        );

        HttpUtil httpUtil = HttpUtil.getInstance();
        httpUtil.postRequest(url, requestBody, new HttpUtil.OkHttpCallback() {
            @Override
            public void onResponse(String response) {
                Gson gson = new Gson();
                ResponseObject responseObject = gson.fromJson(response, ResponseObject.class);
                String toastMessage = responseObject.getMsg();
                uiHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(MyApp.getInstance(), toastMessage, Toast.LENGTH_SHORT).show();
                        Log.e(TAG, toastMessage);
                    }
                });
            }

            @Override
            public void onFailure(IOException e) {
                Log.e("HTTPTEST", "onFailure");
                Log.e("HTTPTEST", e.toString());
            }
        });
    }


    private void showDatePickerDialog() {
        final Calendar calendar = Calendar.getInstance();
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH);
        int day = calendar.get(Calendar.DAY_OF_MONTH);

        DatePickerDialog datePickerDialog = new DatePickerDialog(
                getContext(),
                new DatePickerDialog.OnDateSetListener() {
                    @Override
                    public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {
                        // 在此处处理选择的日期
                        String selectedDate = String.format("%d-%02d-%02d", year, month + 1, dayOfMonth);
                        et_birthday.setText(selectedDate);
                    }
                },
                year,
                month,
                day
        );
        // 全局显示，并取消系统的底部状态栏
        int uiOptions = View.SYSTEM_UI_FLAG_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;

        datePickerDialog.getWindow().getDecorView().setSystemUiVisibility(uiOptions);
        datePickerDialog.show();
    }

    private void showGenderPickerDialog(){
        AlertDialog.Builder builder = new AlertDialog.Builder(requireContext());
        builder.setTitle("请选择性别");
        View dialogView = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_gender_picker, null);
        builder.setView(dialogView);

        // Get a reference to the RadioGroup and the selected RadioButton
        RadioGroup radioGroupGender = dialogView.findViewById(R.id.radio_group_gender);

        builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                int selectedRadioButtonId = radioGroupGender.getCheckedRadioButtonId();

                RadioButton selectedRadioButton = dialogView.findViewById(selectedRadioButtonId);
                if (selectedRadioButton != null) {
                    et_gender.setText(selectedRadioButton.getText());
                }
            }
        });

        builder.setNegativeButton("取消", null);

        // 全局显示，并取消系统的底部状态栏
        int uiOptions = View.SYSTEM_UI_FLAG_FULLSCREEN
                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;

        // 设置全屏模式，隐藏状态栏
        AlertDialog alertDialog = builder.create();
        alertDialog.getWindow().getDecorView().setSystemUiVisibility(uiOptions);

        alertDialog.show();
    }

    private Handler uiHandler = new Handler();

    public void getPersonalInformation(){
        String url = "http://10.110.147.81:8088/penUser/getPenUserinfo";

        HttpUtil httpUtil = HttpUtil.getInstance();

        Map<String, String> queryParams = new HashMap<>();
        queryParams.put("phone", MyApp.getInstance().getPhone());

        httpUtil.getRequest(url, queryParams, new HttpUtil.OkHttpCallback() {
            @Override
            public void onResponse(String response) {
                Gson gson = new Gson();
                ResponseUserInfo res = gson.fromJson(response, ResponseUserInfo.class);
                String toastMessage = res.getMsg();

                if (res.getCode().equals("200")){
                    userInfo = res.getData();
                    uiHandler.post(new Runnable() {
                        @Override
                        public void run() {
                            // refreshCard();
                            et_username.setText(res.getData().getPenUsername());
                            et_phone_number.setText(res.getData().getPenPhone());
                            et_birthday.setText(res.getData().getPenBirth());

                            if (res.getData().getPenGender()==0){
                                et_gender.setText("女");
                            } else if (res.getData().getPenGender()==1) {
                                et_gender.setText("男");
                            }
                        }
                    });
                } else{
                    uiHandler.post(new Runnable() {
                        @Override
                        public void run() {
                            Toast.makeText(getContext(), toastMessage,Toast.LENGTH_LONG);
                        }
                    });
                }

            }

            @Override
            public void onFailure(IOException e) {
                Log.e("HTTPTEST", "onFailure");
                Log.e("HTTPTEST", e.toString());
            }
        });
    }

}