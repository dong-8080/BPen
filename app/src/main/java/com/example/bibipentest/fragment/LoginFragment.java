package com.example.bibipentest.fragment;

import static android.content.Context.MODE_PRIVATE;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;

import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.navigation.Navigation;

import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.example.bibipentest.MyApp;
import com.example.bibipentest.R;
import com.example.bibipentest.activity.MainActivity;
import com.example.bibipentest.json.RequestLogin;
import com.example.bibipentest.json.ResponseObject;
import com.example.bibipentest.util.HttpUtil;
import com.google.gson.Gson;

import java.io.IOException;

import okhttp3.MediaType;
import okhttp3.RequestBody;


public class LoginFragment extends Fragment implements View.OnClickListener {
    private EditText et_account;
    private EditText et_password;
    private TextView tv_register;
    private TextView tv_find_password;
    private Button btn_login;

    private static final String TAG = "LoginFragment";

    @SuppressLint("MissingInflatedId")
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View rootView = inflater.inflate(R.layout.fragment_login, container, false);

        et_account = rootView.findViewById(R.id.et_account);
        et_password = rootView.findViewById(R.id.et_password);
        tv_register = rootView.findViewById(R.id.tv_register);
        tv_find_password = rootView.findViewById(R.id.tv_find_password);
        btn_login = rootView.findViewById(R.id.btn_login);

        btn_login.setOnClickListener(this);
        tv_register.setOnClickListener(this);
        tv_find_password.setOnClickListener(this);




        return rootView;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        SharedPreferences sharedPreferences = getContext().getSharedPreferences("user_info", MODE_PRIVATE);
        String account = sharedPreferences.getString("account", null);
        if(account!=null){
            // 保存信息
            MyApp.getInstance().setPhone(account);
            Intent intent = new Intent(getActivity(), MainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
            startActivity(intent);
        }

    }


    @Override
    public void onClick(View view) {
        Log.d(TAG, "onClick: " + view.getId());
        if (view.getId() == R.id.btn_login) {
            // TODO: 明文传输的密码，安全性低
            checkPassword(et_account.getText().toString(), et_password.getText().toString());
        } else if (view.getId() == R.id.tv_register) {
            Navigation.findNavController(view).navigate(R.id.action_loginFragment_to_registerFragment);

        } else if (view.getId() == R.id.tv_find_password) {
            Navigation.findNavController(view).navigate(R.id.action_loginFragment_to_findPasswordFragment);

        }
    }

    private Handler uiHandler = new Handler();

    // 与后端验证账号及密码是否正确，若正确则登录，否则弹窗
    private void checkPassword(String account, String password){

        if (account.equals("")){
            Toast.makeText(MyApp.getInstance(), "账号不能为空", Toast.LENGTH_SHORT).show();
            return;
        }

        if (password.equals("")){
            Toast.makeText(MyApp.getInstance(), "密码不能为空", Toast.LENGTH_SHORT).show();
            return;
        }

        String url = "http://10.110.147.81:8088/penUser/login";

        RequestLogin req = new RequestLogin(account, password);

        Gson gson = new Gson();

        RequestBody requestBody = RequestBody.create(
                MediaType.parse("application/json"),
                gson.toJson(req)
        );

        HttpUtil httpUtil = HttpUtil.getInstance();
        httpUtil.postRequest(url, requestBody, new HttpUtil.OkHttpCallback() {
            @Override
            public void onResponse(String response) {
                Gson gson = new Gson();
                ResponseObject responseObject = gson.fromJson(response, ResponseObject.class);
                String toastMessage = responseObject.getMsg();
                uiHandler.post(new Runnable() {
                    @Override
                    public void run() {
                        if (toastMessage.equals("登录成功")){
                            startLogin(account);
                        } else {
                            Toast.makeText(MyApp.getInstance(), toastMessage, Toast.LENGTH_SHORT).show();
                        }
                    }
                });
            }

            @Override
            public void onFailure(IOException e) {
                Log.e("HTTPTEST", "onFailure");
                Log.e("HTTPTEST", e.toString());
            }
        });
    }

    private void startLogin(String account){
        SharedPreferences sharedPreferences = getContext().getSharedPreferences("user_info", MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putString("account", account);
        editor.apply();

        MyApp.getInstance().setPhone(account);
        Intent intent = new Intent(getActivity(), MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
        startActivity(intent);
    }


    // 调用生命周期，使得注册完成后，能够免填账号，只输入密码
    @Override
    public void onResume() {
        super.onResume();
        Log.e(TAG, "onResume");
        SharedPreferences sharedPreferences = getContext().getSharedPreferences("user_info", MODE_PRIVATE);
        String account = sharedPreferences.getString("account", null);
        
        et_account.setText(account);
    }
}