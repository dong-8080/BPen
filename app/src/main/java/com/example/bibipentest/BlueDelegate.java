package com.example.bibipentest;

import android.bluetooth.BluetoothGatt;

import com.bbb.bpen.model.Pen;
import com.bbb.bpen.model.PointData;

import java.util.List;

public interface BlueDelegate {

    /// 扫描到智能笔
    /// @param model 笔信息
    void didDiscoverWithPen(Pen device, int rssi);

    /// 连接失败回调
    /// @param error 失败信息
/// @param status 返回连接及断开的原因 参考 android.bluetooth.BluetoothGatt
    /// @param newState 返回最新的连接状态 0断开，1连接中，2连接成功，3断开中
    ///参考android.bluetooth.BluetoothProfile
    void didConnectFail(BluetoothGatt gatt, int status, int newState);

    /// 断开连接回调
///@param status 返回连接及断开的原因 参考 android.bluetooth.BluetoothGatt
/// @param newState 返回最新的连接状态 0断开，1连接中，2连接成功，3断开 参考android.bluetooth.BluetoothProfile
    void didDisconnect(Pen device, int status, int newState);

    /// 智能笔剩余电量（每5s获得一次）
    void notifyBattery(int battery);


    /// 实时坐标点数组
    void notifyRealTimePointData(List<PointData> pointDrawArray);

    /// 同步非实时数据
    /// @param pointDrawArray 坐标点
    void notifyBatchPointData(List<PointData> pointDrawArray);

    /// 智能笔固件版本号
    void notifyFirmwareWithNewVersion(String newVersion);

    /// 智能笔报告坐标点数据同步模式
    /// @param mode 模式
    void notifyDataSynchronizationMode(int mode);

    /// 可以继续使用
    void notifyContinueToUseSuccess();

    /// 无法继续使用
    void notifyContinueToUseFail();

    /// @param mobile 返回绑定的手机尾号，目前sdk不具有绑定和解绑手机号功能，所以连接后会掉到notifyBoundMobile需要断开笔的连接
    void notifyBoundMobile(String mobile);

    /// 连接上蓝牙回调
    /// @param status 返回连接及断开的原因 参考 android.bluetooth.BluetoothGatt
    /// @param newState 返回最新的连接状态 0断开，1连接中，2连接成功，3断开中
    ///参考android.bluetooth.BluetoothProfile
    ///
    void didConnect(Pen device, int status, int newState);

    /// 智能笔型号
    void notifyModel(String model);

    /// 智能笔未同步数据百分比
/// @param percentage 百分比
    void unsynchronizedDataWithPercentage(float percentage);

    /// 同步完成状态
    void notifySyncComplete();

    /// 同步笔三轴向量，和笔对纸张的角度（需要有特定硬件的笔）
    void accelerometerDataSendFromPenOnXYZ(float x, float y, float z, int jiaodu);

    /// 批量模式下的实时坐标点（需要和 notifyOfflineBatchPointData 一起使用）
    void notifyWrittingBatchPointData(List<PointData> pointDrawArray);

    /// 固件离线数据坐标点（需要和 notifyWrittingBatchPointData一起使用）
    void notifyOfflineBatchPointData(List<PointData> pointDrawArray);

    /// 遮挡摄像头回调
    public void notifyCameraState();

    /// 充电状态回调
    /// @param chargestatus返回最新的连接状态 0未充电，1充电中，2电量已充满
    /// 参考android.bluetooth.BluetoothProfile
    ///
    public void notifyChargeState(int chargestatus);
}
